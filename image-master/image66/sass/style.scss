@import "compass";

$cubes: sqrt(49);
$cube-size: 50px;
$cube-margin: $cube-size/3;

$perspective: 1000px;

@mixin cube( $size ) {
  .face {
    transform-origin: 50% 50% 50%;
    transform-style: preserve-3d;
    
    &:nth-child(1) {
      transform: translate3d( 0%, 0px, -$size/2 );
    }
    &:nth-child(2) {
      transform: translate3d( $size/2, 0px, 0px ) rotate3d( 0, 100, 0, 90deg );
    }
    &:nth-child(3) {
      transform: translate3d( 0px, 0px, $size/2 ) rotate3d( 0, 100, 0, 180deg );
    }
    &:nth-child(4) {
      transform: translate3d( -$size/2, 0px, 0px ) rotate3d( 0, 100, 0, 270deg );
    }
    &:nth-child(5) {
      transform: translate3d( 0px, $size/2, 0px ) rotate3d( 100, 0, 0, 90deg );
    }
    &:nth-child(6) {
      transform: translate3d( 0px, -$size/2, 0px ) rotate3d( 100, 0, 0, 270deg );
    }
  }
}

html, body {
  width: 100%;
  height: 100%;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  
  background: #333;
}

.grid {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  
  width: ($cube-size + $cube-margin * 2) * $cubes;
  height: ($cube-size + $cube-margin * 2) * $cubes;
  
  perspective: 800px;
  animation: change-perspective 5s infinite linear normal;
  // transform-style: preserve-3d;
}

@include keyframes(change-perspective) {
  0% { 
    perspective-origin: 50% 50%;
  }
  15% {
    perspective-origin: 25% 25%;
  }
  33% {
    perspective-origin: 75% 25%;
  }
  50% {
    perspective-origin: 50% 50%;
  }
  67% {
    perspective-origin: 25% 75%;
  }
  84% {
    perspective-origin: 75% 75%;
  }
  100% {
    perspective-origin: 50% 50%;
  }
}

.container {
  margin: $cube-margin;
  width: $cube-size;
  height: $cube-size;
}

.cube {
  position: relative;
  
  width: $cube-size;
  height: $cube-size;
  
  @include cube( $cube-size );
  
  transform-style: preserve-3d;
}

.face {
  position: absolute;
  
  width: $cube-size;
  height: $cube-size;
  
  box-sizing: border-box;
  
  border: 1px #6FFF00 solid;
}

@include keyframes(rotate-horizontal) {
  0% { @include transform( rotateY( 0 ) ); }
  100% { @include transform( rotateY( 360deg ) ); }
}

@include keyframes(rotate-vertical) {
  0% { @include transform( rotateX( 0 ) ); }
  100% { @include transform( rotateX( 360deg ) ); }
}