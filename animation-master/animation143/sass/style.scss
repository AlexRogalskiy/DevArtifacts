$purple: #482450;
$purple-muted: #26132b;
$yellow: #fecd30;
$orange: #d94d19;
$blue: #1996fb;
$white: #fff;

$max-width: 1100px;

// larger as
@mixin bpLarge {
  @media (min-width: #{$max-width}) {
    @content;
  }
}

@mixin basefont {
  font-family: 'Montserrat', sans-serif;
  color: white;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin gradientBackground {
  background-image: linear-gradient($purple, $purple-muted);
  background-size: cover;
}

*, *:before, *:after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  width: 100%;
  height: 100%;
  overflow: hidden;
  @include gradientBackground();
}

html {
  position: relative;
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-image: radial-gradient(rgba(black, 0), rgba(black, 0.7));
    background-size: cover;
    pointer-events: none;
    z-index: 2;
  }
}

.page {
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
}

section[class*='unit-'] {
  position: relative;
  height: 100vh;
  display: flex;
  z-index: 2;
  transform-style: preserve-3d;
}

.unit-header {
}

.unit-bg-sphere {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 70vw;
  max-width: 900px;
  height: 70vw;
  max-height: 900px;
  border-radius: 50%;
  @include gradientBackground();
  transform: translateX(-50%) translateY(-50%) translateZ(-50vw);
  transform-style: preserve-3d;
  
  &:before, &:after {
    content: '';
    position: absolute;
    border-radius: 50%;
    @include gradientBackground();
  }
  &:before {
    bottom: 10%;
    left: 0;
    width: 30%;
    height: 30%;
    transform: translateZ(30vw);
  }
  &:after {
    top: 20%;
    right: 0;
    width: 20%;
    height: 20%;
    transform: translateZ(60vw);
  }
}

.unit-bg-triangle {
  position: absolute;
  top: 0%;
  left: 25%;
  width: 50%;
  height: 0;
  padding-top: 45%;
  @include gradientBackground();
  transform: translateZ(-50vw);
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  z-index: 1;
}

.unit-bg-line {
  position: absolute;
  top: 0;
  left: 50%;
  width: 3px;
  height: 120%;
  background-color: #ff0;
  @include gradientBackground();
  transform: translateX(-50%) translateZ(-100vw);
  
  &:before {
    content: '';
    position: absolute;
    top: -3vw;
    left: 50%;
    width: 3vw;
    height: 3vw;
    border: 3px solid $purple;
    border-radius: 50%;
    transform: translateX(-50%) rotate(45deg);
  }
}


.unit-box {
  max-width: $max-width;
  margin: auto;
  padding-right: 2rem;
  padding-left: 2rem;
}

.box-copy {
  max-width: 500px;
  margin: auto;
  @include basefont();
  font-size: 0.8;
  line-height: 1.4em;
  font-weight: 400;
  color: white;
  text-align: center;
}

.head-large {
  position: relative;
  @include basefont();
  font-size: 8vw;
  line-height: 1em;
  font-weight: 600;
  
  &:before {
    content: '';
    position: absolute;
    top: -3vw;
    left: 0;
    width: 10%;
    border-top: 0.6vw solid white;
  }
  
  @include bpLarge() {
    font-size: 6rem; 
    
    &:before {
      top: -2rem;
    }
  }
}

.head-small {
  position: relative;
  margin-bottom: 2rem;
  @include basefont();
  font-size: 3vw;
  line-height: 1em;
  font-weight: 600;
  text-align: center;
  
  &:before {
    content: '';
    position: absolute;
    top: -2vw;
    left: 50% ;
    width: 10%;
    border-top: 0.3vw solid white;
    transform: translateX(-50%);
  }
}








.wrap-3d {
  transform-style: preserve-3d;
  perspective: 200vw;
  perspective-origin: 50% 50%;
}


$boxes: (
  (5%, -100vw, 10vw, 20vw, $orange),
  (10%, 30vw, 10vw, 35vw, $yellow),
  (20%, -100vw, 15vw, 35vw, $blue),
  (10%, 25vw, 10vw, 30vw, $white),
  (35%, -100vw, 15vw, 30vw, $yellow),
  (90%, 30vw, 10vw, 30vw, $orange),
  (75%, -100vw, 12vw, 35vw, $blue),
  (80%, 30vw, 4vw, 10vw, $yellow),
  (85%, -100vw, 10vw, 30vw, $white),
  (70%, 30vw, 10vw, 20vw, $blue)
);

// $left > distance left
// $z-depth > z transform
// $width | $height > dimensions
// $color > base color gets shaded
@mixin box3d($left, $z, $width, $height, $color) {
  position: fixed;
  left: $left;
  width: $width;
  height: $height;
  transform-style: preserve-3d;
  transform-origin: 50% 50% $width*-0.5;
  transform: translateZ(#{$z});
  will-change: transform;
  
  @if $z > 0 {
    z-index: 10;
   } @else {
    z-index: 1;
   }
  
  [class*='box-3d-'] {
    position: absolute;
    backface-visibility: visible;
  }
  
  .box-3d- {
    &front, &right, &back, &left {
      top: 0;
      left: 0;
      width: $width;
      height: $height;
    }
    &top, &bottom {
      left: 0;
      width: $width;
      height: $width;
    }
    &top {
      top: 0;
    }
    &bottom {
      bottom: 0;
    }


    &front {
      background-color: mix(black, $color, 5%);
    }
    &right {
      background-color: mix(black, $color, 10%);
      transform-origin: 0% 50%;
      transform: translateX(100%) rotateY(90deg);
    }
    &back {
      background-color: mix(black, $color, 3%);
      transform-origin: 50% 50%;
      transform: translateZ(#{$width * -1});
    }
    &left {
      background-color: mix(black, $color, 10%);
      transform-origin: 100% 50%;
      transform: translateX(-100%) rotateY(-90deg);
    }
    &top {
      background-color:  $color;
      transform-origin: 50% 0%;
      transform: rotateX(-90deg);
    }
    &bottom {
      background-color: mix(black, $color, 12%);
      transform-origin: 50% 100%;
      transform: rotateX(90deg) translateZ(0);
    }
  }
  
}

@each $box in $boxes {
  $i: index($boxes, $box);
  
  .box-3d:nth-child(#{$i}){
    @include box3d( $box... );
  }
}
