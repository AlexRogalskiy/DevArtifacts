// Generated by CoffeeScript 1.12.7
(function() {
  var Particle;

  Particle = (function() {
    function Particle(x, y) {
      this.x = x;
      this.y = y;
      this.radius = 5;
      this.decayRate = .07;
    }

    Particle.prototype.update = function(ctx, index) {
      if (this.radius > this.decayRate) {
        return this.radius -= this.decayRate;
      } else {
        return ctx.particles.splice(index, 1);
      }
    };

    Particle.prototype.draw = function(ctx, index) {
      ctx.beginPath();
      ctx.arc(this.x, this.y, this.radius, 0, TWO_PI);
      ctx.fillStyle = 'hsla(' + ctx.hue + ', 100%, ' + (index / ctx.particles.length) * 90 + '%, ' + (index / ctx.particles.length) + ')';
      return ctx.fill();
    };

    return Particle;

  })();

  Sketch.create({
    setup: function() {
      this.tick = 0;
      this.particles = [];
      this.hue = 120;
      return this.anchor = {
        x: this.width / 2,
        y: this.height / 2,
        radius: 40,
        angle: 0,
        speed: 0.07
      };
    },
    update: function() {
      var i, results;
      this.anchor.angle += this.anchor.speed;
      this.particles.push(new Particle(this.anchor.x + cos(this.anchor.angle) * this.anchor.radius, this.anchor.y + sin(this.anchor.angle) * this.anchor.radius));
      this.hue += 1;
      i = this.particles.length;
      results = [];
      while (i--) {
        results.push(this.particles[i].update(this, i));
      }
      return results;
    },
    draw: function() {
      var i, results;
      i = this.particles.length;
      results = [];
      while (i--) {
        results.push(this.particles[i].draw(this, i));
      }
      return results;
    }
  });

}).call(this);
