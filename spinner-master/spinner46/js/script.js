!function(){"use strict";function e(e,t){return t={exports:{}},e(t,t.exports),t.exports}function t(){}function i(){return(new Date).getTime()}function o(e){e=e||{},this.el=document.createElement("canvas"),this.context=this.el.getContext("2d"),this.ratio=e.ratio||o.getDPI(),this.width=0,this.height=0,e.parent&&e.parent.appendChild(this.el)}function s(){var e=navigator.userAgent.toLowerCase(),t=navigator.appVersion.toLowerCase(),i=/android.*mobile/.test(e),o=!i&&/android/i.test(e),s=i||o,n=/ip(hone|od|ad)/i.test(e)&&!window.MSStream,a=/ipad/i.test(e)&&n,r=o||a,h=i||n&&!a,l=h||r,c=e.indexOf("firefox")>-1,u=!!e.match(/version\/[\d\.]+.*safari/),d=e.indexOf("opr")>-1,f=!window.ActiveXObject&&"ActiveXObject"in window,p=t.indexOf("msie")>-1||f||t.indexOf("edge")>-1,g=e.indexOf("edge")>-1,v=null!==window.chrome&&void 0!==window.chrome&&"google inc."==navigator.vendor.toLowerCase()&&!d&&!g;this.infos={isDroid:s,isDroidPhone:i,isDroidTablet:o,isIos:n,isIpad:a,isDevice:l,isEdge:g,isIE:p,isIE11:f,isPhone:h,isTablet:r,isFirefox:c,isSafari:u,isOpera:d,isChrome:v,isDesktop:!h&&!r},Object.keys(this.infos).forEach(function(e){Object.defineProperty(this,e,{get:function(){return this.infos[e]}})},this),Object.freeze(this)}function n(e,t){e.addClass?e.addClass(t):e.classList?e.classList.add(t):e.className+=" "+t}function a(e){return JSON.parse(JSON.stringify(e))}function r(){if(!m.isPhone){var e=new T;e.onRender(),window.addEventListener("resize",e.onResize);var t=new A(b.hoverAreaCanvas);window.addEventListener("resize",t.onResize);for(var i=b.projectsList.length-1;i>=0;i--)b.projectsListItem[i].addEventListener("mouseenter",t.scale),b.projectsListItem[i].addEventListener("mouseleave",t.reset)}h()}function h(){if(m.isPhone){var e=.2,t=new TimelineMax;t.fromTo(x.logo,1,{autoAlpha:0},{autoAlpha:1},e+0),t.staggerFromTo(x.profil,1.7,{autoAlpha:0,y:20},{autoAlpha:1,y:0,ease:Quint.easeOut},.08,e+.5),t.fromTo(x.svg,1.2,{autoAlpha:0,y:20},{autoAlpha:1,y:0,ease:Quint.easeOut},e+.8),t.fromTo(x.projectsTitle,1,{autoAlpha:0},{autoAlpha:1},e+1),t.staggerFromTo(x.projectsList,1.7,{autoAlpha:0,y:20},{autoAlpha:1,y:0,ease:Quint.easeOut},.08,e+1.2),t.fromTo(x.bar,1,{scaleX:0},{scaleX:1,ease:Quint.easeOut,transformOrigin:"left"},e+1.4),t.fromTo(x.footerTitle,1,{autoAlpha:0},{autoAlpha:1},e+1.6),t.staggerFromTo(x.socials,1.7,{autoAlpha:0,y:20},{autoAlpha:1,y:0,ease:Quint.easeOut},.08,e+1.8)}else{TweenMax.fromTo(b.backgroundSVG,.8,{autoAlpha:0},{autoAlpha:.5,force3D:!0,delay:1.7,ease:Power0.easeNone}),TweenMax.fromTo(b.background,4,{scale:1.1},{scale:1,force3D:!0,delay:1.6,ease:Quint.easeOut});var e=.2,t=new TimelineMax;t.fromTo(b.logo,1,{autoAlpha:0},{autoAlpha:1},e+0),t.staggerFromTo(b.profil,1.7,{autoAlpha:0,x:-20},{autoAlpha:1,x:0,ease:Quint.easeOut},.08,e+.8),t.fromTo(b.projectsTitle,1.5,{autoAlpha:0},{autoAlpha:1},e+1),t.staggerFromTo(b.projectsList,1.2,{autoAlpha:0,x:-20},{autoAlpha:1,x:0,ease:Quint.easeOut},.07,e+1),t.staggerFromTo(b.projectsBar,1,{scaleX:0},{scaleX:1,ease:Quint.easeOut,transformOrigin:"left"},.07,e+1.3),t.staggerFromTo(b.socials,1.2,{autoAlpha:0},{autoAlpha:1},.08,e+1.4)}}t.prototype={on:function(e,t,i){var o=this.e||(this.e={});return(o[e]||(o[e]=[])).push({fn:t,ctx:i}),this},once:function(e,t,i){function o(){s.off(e,o),t.apply(i,arguments)}var s=this;return o._=t,this.on(e,o,i)},emit:function(e){var t=[].slice.call(arguments,1),i=((this.e||(this.e={}))[e]||[]).slice(),o=0,s=i.length;for(o;o<s;o++)i[o].fn.apply(i[o].ctx,t);return this},off:function(e,t){var i=this.e||(this.e={}),o=i[e],s=[];if(o&&t)for(var n=0,a=o.length;n<a;n++)o[n].fn!==t&&o[n].fn._!==t&&s.push(o[n]);return s.length?i[e]=s:delete i[e],this}};var l=t,c=Date.now||i,u=c,d=function(e,t,i){function o(){var l=u()-r;l<t&&l>0?s=setTimeout(o,t-l):(s=null,i||(h=e.apply(a,n),s||(a=n=null)))}var s,n,a,r,h;return null==t&&(t=100),function(){a=this,n=arguments,r=u();var l=i&&!s;return s||(s=setTimeout(o,t)),l&&(h=e.apply(a,n),a=n=null),h}},f=e(function(e){function t(){h?(c.width=document.body.clientWidth,c.height=document.body.clientHeight,c.hasBar=c.width>c.height&&c.height>window.innerHeight):(c.width=window.innerWidth,c.height=window.innerHeight),c.isLandscape=c.width>c.height,r.emit(a,c.width,c.height)}var i,o,s=l,n=d,a="resize",r=new s,h=/ip(hone|od|ad)/i.test(window.navigator.userAgent.toLowerCase())&&!window.MSStream,c=e.exports={width:0,height:0,hasBar:!1,isLandscape:!1,addListener:function(e,t){r.on(a,e,t)},removeListener:function(e,t){e&&r.off(a,e,t)},bind:function(e){e=e||{},c.unbind(),i=e.debounceTime||150,o=n(t,i),window.addEventListener(a,o)},unbind:function(){window.removeEventListener(a,o)}};t(),c.bind()}),p=o;o.prototype.resize=function(e,t){this.width=e,this.height=t,this.el.width=this.ratio*e,this.el.height=this.ratio*t,this.el.style.width=e+"px",this.el.style.height=t+"px"},o.prototype.clear=function(){this.context.clearRect(0,0,this.width*this.ratio,this.height*this.ratio)},o.prototype.snapshot=function(e,t){return this.el.toDataURL(e,t)},o.prototype.destroy=function(){this.context=null,this.el.parentNode&&this.el.parentNode.removeChild(this.el),this.el=null},o.getDPI=function(){return window.devicePixelRatio||1};var g=function(e){if("string"!=typeof e)throw new TypeError("expected a string");return e=e.replace(/([a-z])([A-Z])/g,"$1-$2"),e=e.replace(/[ \t\W]/g,"-"),e=e.replace(/^-+|-+$/g,""),e.toLowerCase()},v=g,m=new s;s.prototype.addClasses=function(e){Object.keys(this.infos).forEach(function(t){this.infos[t]&&n(e,v(t))},this)},s.prototype.getInfos=function(){return a(this.infos)};var w=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},y=function(){function e(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,i,o){return i&&e(t.prototype,i),o&&e(t,o),t}}();window.addEventListener("load",r);var b={backgroundSVG:document.getElementsByClassName("Background-svg"),background:document.getElementsByClassName("Background"),svg:document.querySelector(".Background-svg svg"),backgroundFade:document.getElementsByClassName("Background-fade"),logo:document.getElementsByClassName("Logo"),profil:document.querySelectorAll(".Profile span"),projectsTitle:document.getElementsByClassName("Projects-title"),projectsList:document.querySelectorAll(".Projects-list li"),projectsListItem:document.querySelectorAll(".Projects-list li a"),projectsBar:document.querySelectorAll(".Projects-bar"),socials:document.querySelectorAll(".Socials li"),noise:document.getElementsByClassName("Noise"),hoverArea:document.getElementsByClassName("Hover-area"),hoverAreaCanvas:document.querySelectorAll(".Hover-area canvas")},x={logo:document.querySelector(".Mobile-header .Mobile-title"),profil:document.querySelectorAll(".Mobile-header .Mobile-header-profil span"),svg:document.querySelectorAll(".Mobile-svg"),projectsTitle:document.querySelector(".Mobile-projects .Mobile-title"),projectsList:document.querySelectorAll(".Mobile-projects-list li"),bar:document.querySelector(".Mobile-projects-bar"),footerTitle:document.querySelector(".Mobile-footer .Mobile-title"),socials:document.querySelectorAll(".Mobile-footer-socials li")},A=function(){function e(t){w(this,e),this.onResize=this.onResize.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.loop=this.loop.bind(this),this.scale=this.scale.bind(this),this.reset=this.reset.bind(this),this.targetX=0,this.targetY=0,this.posX=0,this.posY=0,this.radius=0,this.maxRadius=40,this.offset=40,this.opacity=.2,this.targetOpacity=.2,setTimeout(function(){this.bounds=b.hoverArea[0].getBoundingClientRect(),this.canvas=t,this.canvas[0].width=this.bounds.width,this.canvas[0].height=this.bounds.height,this.ctx=this.canvas[0].getContext("2d"),window.addEventListener("mousemove",this.onMouseMove),TweenMax.ticker.addEventListener("tick",this.loop)}.bind(this),0)}return y(e,[{key:"onResize",value:function(){this.bounds=b.hoverArea[0].getBoundingClientRect(),this.canvas[0].width=f.width,this.canvas[0].height=f.height}},{key:"onMouseMove",value:function(e){this.targetX=e.clientX-this.bounds.left,this.targetY=e.clientY-this.bounds.top}},{key:"scale",value:function(e){var t=e.currentTarget.parentNode;TweenMax.to(t,.3,{x:10,force3D:!0}),this.maxRadius=50,this.targetOpacity=.5}},{key:"reset",value:function(e){var t=e.currentTarget.parentNode;TweenMax.to(t,.3,{x:0,force3D:!0}),this.maxRadius=40,this.targetOpacity=.2}},{key:"drawCircle",value:function(e){this.posX+=.25*(this.targetX-this.posX),this.posY+=.25*(this.targetY-this.posY),this.opacity+=.1*(this.targetOpacity-this.opacity),this.ctx.beginPath(),this.ctx.arc(this.posX,this.posY,e,0,2*Math.PI,!1),this.ctx.fillStyle="#3d3d3d",this.ctx.fill(),this.ctx.globalAlpha=this.opacity,this.ctx.closePath()}},{key:"loop",value:function(){this.ctx.clearRect(0,0,this.bounds.width,this.bounds.height);var e;e=this.targetX<this.offset||this.targetX>this.bounds.width-this.offset||this.targetY<this.offset||this.targetY>this.bounds.height-this.offset?0:this.maxRadius,this.radius+=.17*(e-this.radius),this.drawCircle(this.radius)}}]),e}(),T=function(){function e(t){w(this,e),this.onUpdate=this.onUpdate.bind(this),this.onResize=this.onResize.bind(this),this.tileSize=128,this.grain=1}return y(e,[{key:"onRender",value:function(){this.hiddenCanvas=new p({ratio:1}),this.hiddenCanvas.resize(this.tileSize,this.tileSize),this.canvas=new p({ratio:1,parent:b.noise[0]}),this.onResize()}},{key:"onResize",value:function(){TweenMax.ticker.removeEventListener("tick",this.onUpdate),setTimeout(function(){this.canvas.resize(f.width,f.height),b.noise[0].style.width=f.width+"px",b.noise[0].style.height=f.height+"px",TweenMax.ticker.addEventListener("tick",this.onUpdate)}.bind(this),200)}},{key:"onUpdate",value:function(){for(var e=this.hiddenCanvas.context,t=e.getImageData(0,0,this.tileSize,this.tileSize),i=0;i<t.data.length;i+=4)t.data[i]=t.data[i+1]=t.data[i+2]=~~(255*Math.random()),t.data[i+3]=255;e.putImageData(t,0,0);var o=this.canvas.context,s=Math.ceil(f.width/this.tileSize),n=Math.ceil(f.height/this.tileSize),a=this.grain;o.clearRect(0,0,f.width,f.height),o.globalAlpha=.02;for(var i=0;i<s;i++)for(var r=0;r<n;r++)o.drawImage(this.hiddenCanvas.el,i*this.tileSize,r*this.tileSize,this.tileSize*a,this.tileSize*a)}},{key:"onBeforeDestroy",value:function(){this.hiddenCanvas.destroy(),this.canvas.destroy(),this.fpsControl=null}}]),e}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,