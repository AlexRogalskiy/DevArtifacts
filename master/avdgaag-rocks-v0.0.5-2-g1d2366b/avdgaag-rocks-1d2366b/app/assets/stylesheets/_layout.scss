// Consistent floats: float to the left and use `display: inline` to make it
// more likely to work correctly in IE.
@mixin float($dir: left) {
    float: $dir;
    display: inline;
}

// Outdent a child element from the current element.
//
// The element matched by `selector` will receive a negative margin to the
// left, pulling it out of the container element this mixin applies to.  You
// can optionally add the same amount of padding to the container, so all the
// container's contents get indented, and the selected child element sits in
// the created whitespace.
//
// $selector is the selecter the outdenting styles apply to
// $amount is the width to outdent
// $dir is the direction of the outdent, defaulting to left
// $with-padding controls whether the same $amount of padding is applied
@mixin outdent($selector, $amount, $dir: left, $with-padding: true) {
    @if $with-padding {
        padding-#{$dir}: $amount;
    }
    #{$selector} {
        @include float($dir);
        @if $dir == left {
            margin-left: -$amount;
        } @else {
            margin-right: -$amount;
        }
    }
}

// Mimic the HTML align attribute, but better
//
// This floats an element in direction given by `$dir`, and applies some
// whitespace around it.
@mixin align($dir: 'left', $v: $line, $h: $grid-margin, $mirror: false) {
    @include float('left');
    margin-top: $v;
    margin-bottom: $v;
    @if $dir == 'right' or $mirror {
        margin-left: $h;
    } @else {
        margin-left: 0;
    }
    @if $dir == 'left' or $mirror {
        margin-right: $h;
    } @else {
        margin-right: 0;
    }
}

// Let an element automatically clear its containing floats.
@mixin clearfix {
    zoom: 1;
    &:after {
        visibility: hidden;
        display: block;
        font-size: 0;
        content: " ";
        clear: both;
        height: 0;
    }
}

.clearfix {
    @include clearfix;
}

// Apply negative margin and equal, opposing padding, to the left of an element.
@mixin outset-left($gutter: $grid-margin, $with-padding: false) {
    margin-left: -$gutter;
    @if $with-padding == true {
        padding-left: $gutter;
    }
}

// Apply negative margin and equal, opposing padding, to the right of an element.
@mixin outset-right($gutter: $grid-margin, $with-padding: false) {
    margin-right: -$gutter;
    @if $with-padding == true {
        padding-right: $gutter;
    }
}

// Apply negative margin and equal, opposing padding, to the right and left of
// an element. Useful for horizontally breaking out of a container element.
@mixin outset($gutter: $grid-margin, $with-padding: true) {
    @include outset-left($gutter, $with-padding);
    @include outset-right($gutter, $with-padding);
}

// Apply consistent whitespace above an element, either in number of lines
// or as a fixed amount.
@mixin leading($amount: $line) {
    @if unitless($amount) {
        margin-top: lines($amount);
    } @else {
        margin-top: $amount;
    }
}

// Apply consistent whitespace below an element, either in number of lines or
// as a fixed amount.
@mixin trailing($amount: $line) {
    @if unitless($amount) {
        margin-bottom: lines($amount);
    } @else {
        margin-bottom: $amount;
    }
}

// Apply default trailing and leading whitespace around elements. Assumed to be
// applied to all non-generic block-level elements (so p, h1 and table but not
// div or section)
@mixin surrounding-lines {
    @include leading;
    @include trailing;
}

// Vertically outset an element by applying negative margin and equal, opposing
// padding to the top. You can optionally remove some of the padding to allow
// room for a border.
@mixin voutset-top($amount, $border: 0) {
    @if unitless($amount) {
        $amount: lines($amount);
    }
    margin-top: -$amount;
    padding-top: $amount - $border;
}

// Vertically outset an element by applying negative margin and equal, opposing
// padding to the bottom. You can optionally remove some of the padding to
// allow room for a border.
@mixin voutset-bottom($amount, $border: 0) {
    @if unitless($amount) {
        $amount: lines($amount);
    }
    margin-bottom: -$amount;
    padding-bottom: $amount - $border;
}

// Vertically outset an element by applying negative margins and equal,
// opossing padding above and below an element.
//
// This is useful for having text between two paragrahps equally spaced apart,
// but add a background or border around one element with nice padding.
@mixin voutset($amount, $border: 0) {
    @include voutset-top($amount, $border);
    @include voutset-bottom($amount, $border);
}
