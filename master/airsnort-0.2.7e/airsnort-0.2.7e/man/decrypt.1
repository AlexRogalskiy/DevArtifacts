.\"
.\" Copyright (c) 2002 Snax <snax@shmoo.com>
.\"
.\" $Id: decrypt.1,v 1.1 2002/08/21 04:36:12 snaks Exp $
.\"
.Dd August 18, 2002
.Dt DECRYPT 1
.Os Linux
.Sh NAME
.Nm decrypt
.Nd 802.11b packet decryption tool
.Sh SYNOPSIS
.Nm decrypt Li (-p Ar key | Li -f Ar dictfile ) Li -m Ar bssid Li -e Ar infile 
.Li -d Ar outfile 
.Op -b 
.Op -o Ar offset
.Sh DESCRIPTION
.Nm decrypt
is a command line tool that takes 3 pieces of input, a pcap format
input file, a WEP key, and a bssid (access point MAC address).  If the provided
WEP key is found to be the key for the indicated bssid, associated packets are
decrypted and copied to the output file.  If the key is not a valid key, all 
input packets are written unchanged to the output file.  The output is a pcap
compatible dump file and can be examined with tools such as tcpdump or ethereal 
to view the decrypted data.

This tool understands two link types, LINKTYPE_IEEE802_11 and 
LINKTYPE_PRISM_HEADER.  Other 802.11b capture formats can be decrypted by 
specifying an optional offset command line argument with the -o switch to
indicate the number of header bytes that precede the actual 802.11b packet.
That is, the number of bytes that precede the first frame control byte of
each 802.11b packet.

An alternate dictionary mode utilizes an input word list of potential WEP keys 
to attempt to find a valid key for the specified bssid. If a valid key is found
packets are decrypted and copied to the specified output file.
.Sh OPTIONS
.Bl -tag 
.It -p Ar key
password whose length must be 5 or 13 bytes of ascii data or 5 or 13 2 digit,
colon separated hex values.
.It -f Ar dictfile 
the name of a file containing one password per line in the format specified 
above. All passwords in the file will be tried against the specified bssid.
.It -b
Discard beacon packets. Beacon packets will not be written in the output file.
.It -o Ar offset
Optional integer number of bytes of header that precede the first frame control
byte in the 802.11b packet. 
.Nm decrypt
can recognized packets captured with no prefix bytes (pcap type DLT_IEEE802_11)
as well as packets prefixed with prism2 style headers (pcap type DLT_PRISM_HEADER).
In these two cases, no offest argument is required.
.It -m Ar bssid
6 byte mac address of the AP for which traffic is to be decrypted in the form 
xx:xx:xx:xx:xx:xx
.It -e Ar infile
The name of the file containing encrypted packets. This file is expected to be
in pcap dump file format.
.It -d Ar outfile
The output file produced by decrypting all data packets associated with the 
named AP using the specified key.  All other packets are copied from infile 
unchanged.  This file will be in pcap dump file format. If the provided key is  
not a valid key for the specified bssid, all packets are copied unchanged to
the output file.
.El
.Sh EXAMPLES
Decrypt all trafic to/from the access point with bssid 01:02:34:56:78:9a using
ascii key "MyKey", reading from input file "capture", writing the results to a file
named "decrypted"
.Bd -literal -offset indent
decrypt -p MyKey -m 01:02:34:56:78:9a -e capture -d decrypted
.Ed
.Pp
Attempt to find a key for traffic to/from the access point with bssid 
01:02:34:56:78:9a by trying all keys contained in the dictionary file "words". 
Packets are read from the input file "packets" and contain 50 bytes of prefix data
Results are written to file "decrypted"
.Bd -literal -offset indent
decrypt -f words -o 50 -m 01:02:34:56:78:9a -e packets -d decrypted
.Ed
.Sh SEE ALSO
.Xr airsnort 1
.Xr gencases 1
.Sh AUTHORS
.Bd 
.An Jeremy Bruestle  <melvin@melvin.net>
.An Blake Hegerle    <blake@melvin.net>
.An Snax             <snax@shmoo.com>
.Ed