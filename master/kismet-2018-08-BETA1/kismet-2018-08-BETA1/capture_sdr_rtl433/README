Kismet RTL433 Support

- UNDER DEVELOPMENT -

    The rtl-sdr support in Kismet is under heavy development, not all
    features are complete at this time (alternate frequencies, 
    channel hopping, and some other functionality are still being
    completed).

- RTL-SDR -

    The Kismet rtl_433 SDR capture requires a RTL-SDR USB device; you 
    can learn more about these on the main RTL-SDR website:
        https://www.rtl-sdr.com

    The RTL-SDR is typically an extremely low-cost USB device which
    can perform limited raw radio capture.  While often *extremely*
    limited, the RTL-SDR is still capable of a surprising amount of
    useful capture.

    To use the RTL SDR capture device, you will need a rtlsdr; 
    your Wi-Fi card cannot receive the signal.

- RTL_433 -

    Kismet requires the rtl_433 tool be installed.  The rtl_433
    tool can typically be installed as package by your distribution,
    compiled as part of the pybombs system, or installed manually
    from the source at:
        https://github.com/merbanan/rtl_433

    The rtl_433 tool uses the RTL-SDR hardware to sniff for broadcasts
    from a wide variety of sensors found on the 433MHz ISM spectrum
    (one of the segments of the radio bands which is reserved for
     non-licensed applications, similar to the bands Wi-Fi and
     Bluetooth live in).

    These sensors include a variety of temperature and humidity 
    sensors, power and water meter systems, radio-controlled power
    switches, weather stations, tire pressure monitoring systems,
    and more.

- CONFIGURING RTL_433 -

    The only configuration necessary to configure rtl_433 is to make
    sure that your user has access to the rtlsdr USB device.  
    This is usually accomplished by installing the udev rules which
    accompany librtlsdr.

    Typically the group `plugdev` is given access; make sure the 
    user you plan to run Kismet as is in that group.

    For more information, check the documentation that came with
    librtlsdr or the rtlsdr website:
        https://rtl-sdr.com

- CONFIGURING KISMET -

    The Kismet capture driver is implemented as a Python datasource;
    you will need the Kismet-related Python modules from the
    python_modules/ directory of Kismet (which will be installed
    automatically in most cases).

    rtlsdr hardware will be automatically detected and shown in the
    Datasources window, or it can be configured as 'rtl433-X',
    where 'X' is the radio you wish to use.  If you have only one
    radio, this will always be zero; for instance:

        source=rtl433-0:name=some_sdr

