/*
 *	ЗАДАНИЕ 1

		1. Подключите модуль 'http'
		2. Создайте сервер с ф-цией обратного вызова, которая принимает два аргумента: request и response. Поставьте сервер на прослушку порта 8080
		3. С помощью объекта response:
				- верните статус успешного выполнения запроса
				- в теле ответа верните строку "Привет от [ваше имя]!"
				- сообщите клиенту, что все необходимые данные переданы (обозначьте конец ответа)
		4. Запустите сервер
		5. Выполните запрос к серверу через браузер и убедитесь в корректности ответа
		6. Остановите сервер
*/

/*
 *	ЗАДАНИЕ 2

		1. Создайте в папке labs файл index.html со следующим содержимым:
				<hr><strong>Конец сообщения.</strong>
		2. В текущем файле (lab-1.js) подключите модуль 'fs'
		3. Асинхорнно зачитайте файл index.html и верните его клиенту после вывода строки "Привет от [ваше имя]!"
		4. Запустите сервер
		5. Выполните запрос к серверу через браузер и убедитесь в корректности ответа.
		   Если вы всё сделали правильно, то должна остаться одна проблема: html-код из файла вывелся "как есть". 
			 Почему? 
		6. Изучите заголовки ответа сервера (вкладка Network Инструментов разработчика (F12)) 
*/

/*
 *	ЗАДАНИЕ 3

		1. Откройте документацию Node.js (http://nodejs.org/api/http.html#http_response_writehead_statuscode_reasonphrase_headers) и посмотрите, как послать дополнительные заголовки ответа сервера
		2. Измените код сервера, чтобы он отдавал заголовок, необходимый для "понимания" браузером, что он получает html-код
		3. Перезапустите сервер
		4. Выполните запрос к серверу через браузер и убедитесь в корректности ответа
*/