@import 'bourbon'; // http://bourbon.io/

@import '../partials/variables'; // colors, fonts etc...

@import '../partials/mixins'; // custom mixins

@import '../partials/layout'; // responsive grid and media queries

/* -------------------------------- 

Primary style

-------------------------------- */

*, *::after, *::before {
	@include box-sizing(border-box);
}

html {
	font-size: 62.5%;
}

body {
	font: {
		size: 1.6rem;
		family: $primary-font; // variables inside partials > _variables.scss
	}
	color: $color-1;
	background-color: $color-3;
}

a {
	color: $color-2;
	text-decoration: none;
}

/* -------------------------------- 

Main Components 

-------------------------------- */

.projects-container {
	height: 100vh;
	width: 100vw;
	position: relative;
	overflow-x: hidden;
	-webkit-overflow-scrolling: touch;

	&::before {
		/* never visible - this is used in jQuery to check the current MQ */
		content: 'mobile';
		display: none;
	}

	.cd-single-project {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%/$items;
	    overflow: hidden;
		cursor: pointer;
		@include transition(transform 0.4s);

		/* on mobile -  move items outside the viewport */
		@include transform(translateX(-100%));

	    &::after {
	    	/* background image */
	    	content: '';
	    	position: absolute;
	    	top: 0;
	    	left: 0;
	    	height: 100vh/$items;
	    	width: 100%;
	    	background-image: url('../img/img-1-small.jpg');
			background-repeat: no-repeat;
			background-position: center center;
			background-size: cover; 
			@include transition(opacity 0.5s, height 0.4s);
	    }

	    &::before {
	    	/* never visible - this is used in jQuery to detect if the background image has been loaded  */
			content: 'img/img-1-small.jpg';
			display: none;
	    }

		&:nth-of-type(2) {
			top: 100vh/$items;
			
			&::after {
				background-image: url('../img/img-2-small.jpg'); 
			}

			&::before {
				content: 'img/img-2-small.jpg';
			}
		}

		&:nth-of-type(3) {
			top: 100vh*2/$items;

			&::after {
				background-image: url('../img/img-3-small.jpg'); 
			}

			&::before {
				content: 'img/img-3-small.jpg';
			}
		}

		&:nth-of-type(4) { 
			top: 100vh*3/$items;

			&::after {
				background-image: url('../img/img-4-small.jpg'); 
			} 

			&::before {
				content: 'img/img-4-small.jpg';
			}
		}

		&.is-loaded {
			/* move items in the viewport when background images have been loaded */
			@include transform(translateX(0));
		}

		&.is-full-width {
			/* selected item */
			top: 0;
			height: auto;
			z-index: 1;
			cursor: auto;
			@include transition(z-index 0s 0s, top 0.4s 0s);

			&::after {
				height: 100vh;
			}
		}	
	}

	@include MQ(M) {

		&::before {
			/* never visible - this is used in jQuery to check the current MQ */
			content: 'desktop';
		}

		.cd-single-project {
			width: 100vw/$items;
			height: 100%;
			opacity: 0;
			@include transform(translateX(0));
			@include transition(width 0s);

			&:first-of-type::before {
				content: 'img/img-1-large.jpg';
			}

			&:first-of-type::after {
				background-image: url('../img/img-1-large.jpg'); 
			}

			&:nth-of-type(2) {
				top: 0;
				left: 100vw/$items;

				&::before {
					content: 'img/img-2-large.jpg';
				}

				&::after {
					background-image: url('../img/img-2-large.jpg'); 
				} 
			}

			&:nth-of-type(3) {
				top: 0;
				left: 100vw*2/$items;

				&::before {
					content: 'img/img-3-large.jpg';
				} 

				&::after {
					background-image: url('../img/img-3-large.jpg'); 
				}
			}

			&:nth-of-type(4) { 
				top: 0;
				left: 100vw*3/$items;

				&::before {
					content: 'img/img-4-large.jpg';
				} 

				&::after {
					background-image: url('../img/img-4-large.jpg'); 
				}
			}

			&::after {
				height: 100vh;
				width: 100%;
				opacity: 0;
			}

			&.is-loaded {
				/* show items when background images have been loaded */
				opacity: 1;

				&::after {
					opacity: 1;
				}
			}

			&.is-full-width {
				/* selected item */
				left: 0vw;
				width: 100vw;
				@include transition(width 0.4s 0s, z-index 0s 0s, left 0.4s 0s);
			}
		}
	}

    @include MQ(L) {

    	.cd-single-project::after {
    		background-attachment: fixed;
			@include transform(scale(1.1));
			@include transition(transform .8s, opacity .5s);
    	}

    	.cd-single-project.is-loaded::after {
			opacity: 0;
		}

	    .no-touch & .cd-single-project:hover::after, .cd-single-project.is-full-width.is-loaded::after {
	    	opacity: 1;
	    	@include transform(scale(1));
	    }
    }
}

.cd-title {
	position: absolute;
	z-index: 1;
	left: 0;
    top: 100vh/($items*2);
    @include transform(translateY(-50%));
    width: 100%;
    text-align: center;

    .is-full-width & {
		top: 50vh;
		@include transition(opacity 0s, top 0.4s);
	}

	> * {
		text-shadow: 0 1px 4px rgba(#000, .2);
		@include font-smoothing;
	}

	h2 {
		font-size: 2.5rem;
		line-height: 1.5; 
		font-weight: 700;
	}

	p {
		font-size: 1.4rem;
		font-family: $secondary-font;
		font-style: italic;
		line-height: 1.2;
		padding: .4em 2em;
		display: none;
		opacity: .6;
	}

	@include MQ(M) {
		top: 50vh;
		width: 100vw/$items;
		opacity: 0;
		@include transform(translateY(-50%) translateX(-20px));

		.is-loaded & {
			opacity: 1;
			@include transform(translateY(-50%));
			@include transition(transform 0.6s, opacity 0.6s, left 0.4s);
		}

		.is-loaded.is-full-width & {
			left: (100vw - 100vw/$items)/2;
			@include transition(transform 0.6s, opacity 0s, left 0.4s);
		}

		p {
			display: block;
		}
	}

	@include MQ(L) {

		h2 {
			font-size: 3.6rem;
		}
	}
}

.cd-project-info {
	clear: both;
	visibility: hidden;
	opacity: 0;	
	margin-top: 100vh;
	padding: 4em 0;
	cursor: auto;
	background-color: $color-1;
	color: lighten($color-3, 30%);
	@include transition(opacity 0.4s 0s, visibility 0s 0.4s);

	.is-full-width & {
		visibility: visible;
		opacity: 1;
	}

	p {
		width: 90%;
		max-width: 800px;
		margin: 0 auto;
		line-height: 2;
	}

	@include MQ(M) {
		position: relative;
		z-index: 1;
	}
}

.projects-container .cd-close, 
.projects-container .cd-scroll {
	display: block;
	z-index: 1;
	width: 44px;
	height: 44px;

	/* image replacement */
	overflow: hidden;
	text-indent: 100%;
	white-space: nowrap;

	visibility: hidden;
	@include transition(transform 1s 0s, visibility 0s 1s);
}

.projects-container .cd-close {
	position: fixed;
	top: 30px;
	right: 5%;
	background: url('../img/cd-icon-close-mobile.svg') no-repeat center center;
	@include transform(scale(0));

	@include MQ(L) {
		background-image: url('../img/cd-icon-close-desktop.svg');
	}
}

.projects-container .cd-scroll {
	position: absolute;
	bottom: 30px;
	left: 50%;
	@include transform(translateX(-50%) scale(0));
	background: url('../img/cd-icon-arrow-mobile.svg') no-repeat center center;

	@include MQ(L) {
		background-image: url('../img/cd-icon-arrow-desktop.svg');
	}
}

.project-is-open .cd-close, 
.project-is-open .cd-scroll {
	visibility: visible;
	@include transform(scale(1));
	@include transition(transform 0.4s 0s, visibility 0s 0s);
}

.project-is-open .cd-scroll {
	@include transform(translateX(-50%) scale(1));
	@include animation(cd-translate 1.2s 0.4s);
	@include animation-iteration-count(2);
}

.no-touch .project-is-open .cd-close:hover {
	@include transform(scale(1.2));
}

.no-touch .project-is-open .cd-scroll:hover {
	@include transform(translateX(-50%) scale(1.2));
}

@include keyframes(cd-translate) {
	0% {
		@include transform(translateX(-50%) scale(1));
	}

	50% {
		@include transform(translateY(10px) translateX(-50%) scale(1));
	}

	100% {
		@include transform(translateX(-50%) scale(1));
	}
}